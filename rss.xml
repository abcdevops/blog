<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="https://abcdevops.com/rss.xml" rel="self" type="application/atom+xml" /><link href="https://abcdevops.com/" rel="alternate" type="text/html" /><updated>2020-06-03T04:39:00-04:00</updated><id>https://abcdevops.com/</id><title>ABCDevOps: re:devining DevOps</title><subtitle>ABCDevOps: Let&#39;s discuss what devops is.</subtitle><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><entry><title>Flutter: Internationalization &amp;amp; Switching Locales Manually</title><link href="https://abcdevops.com/blog/2019/07/01/Flutter-Internationalization-with-Manual-Locale-switch.html" rel="alternate" type="text/html" title="Flutter: Internationalization &amp; Switching Locales Manually" /><published>2019-07-01T00:00:00-04:00</published><updated>2019-07-01T00:00:00-04:00</updated><id>https://abcdevops.com/blog/2019/07/01/Flutter-Internationalization-with-Manual-Locale-switch</id><content type="html" xml:base="https://abcdevops.com/blog/2019/07/01/Flutter-Internationalization-with-Manual-Locale-switch.html">&lt;p&gt;At times you will have to make your Flutter app support different language or “locale” or in other words make your app Internationalized. &lt;!--more--&gt;
Flutter provides widgets &amp;amp; classes that help with this and the Flutter libraries themselves are internationalized. In the following tutorials we’ll use the APIs and tools provided by the intl package. If you’re new Dart’s intl package, i suggest you have a look at the &lt;a href=&quot;https://flutter.dev/docs/development/accessibility-and-localization/internationalization#dart-tools&quot;&gt;Dart intl tools&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As you might know Flutter is now taking over vast majority of market, so if you’re a software developer there is 99.9% chance that you will come across this. So here’s an easy step by step tutorial for internationalization of your flutter app, also we’ll see how to manually switch your App’s Locale on specific events. I’ll assume you know how to setup a flutter app so we’ll skip that part. Alrighty then Avengers! Assemble!!&lt;/p&gt;

&lt;p&gt;So first step is to Include the packages in &lt;code&gt;pubspec.yaml&lt;/code&gt; file. For that just add the 2 packages name under  the dependencies. It would look something like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
    
  intl_translation: ^0.17.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After you save this, flutter automatically downloads and include the packages. You can now use it in your app anywhere simply by importing it. We’ll import it in the main.dart file first. Goto you &lt;code&gt;main.dart&lt;/code&gt; file and add import the package.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;import &#39;package:flutter_localizations/flutter_localizations.dart&#39;;
import &#39;package:intl/intl.dart&#39;;
void main() =&amp;gt; runApp(MyApp());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next step is to setup the Localization delegates in your &lt;code&gt;main.dart&lt;/code&gt; file. For that you need to specify the 2 delegates first.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;  Widget build(BuildContext context) {
    return MaterialApp(
      localizationsDelegates: [
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate
      ],
      supportedLocales: [
        const Locale(&#39;en&#39;, &#39;US&#39;),
        const Locale(&#39;de&#39;, &#39;DE&#39;)
      ],
      ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;GlobalMaterialLocalizations.delegate&lt;/code&gt; provides localized strings and other values for the Material Components library. &lt;code&gt;GlobalWidgetsLocalizations.delegate&lt;/code&gt; defines the default text direction, either left to right or right to left, for the widgets library.
As you can see here, we added 2 lists to our Material app &lt;code&gt;localizationsDelegates&lt;/code&gt; &amp;amp; &lt;code&gt;supportedLocales&lt;/code&gt;. The &lt;code&gt;supportedLocales&lt;/code&gt; parameter holds the list of languages that our app will support. Here you will specify list of languages_codes.&lt;/p&gt;

&lt;h2 id=&quot;create-a-file-on-path-liblocaleapp_localizationdart&quot;&gt;Create a file on path /lib/locale/app_localization.dart&lt;/h2&gt;

&lt;p&gt;Next step is to create an &lt;code&gt;AppLocalization&lt;/code&gt; &amp;amp; &lt;code&gt;AppLocalizationDelegate&lt;/code&gt;. Classes in which we’ll be defining our keywords and their translations. We’ll also use it throughout the app and for manually switching the Locale if required. Therefore i suggest you create this class in a Separate folder in  your lib directory. Mine looks like &lt;code&gt;/lib/locale/app_localization.dart&lt;/code&gt;
The AppLocalization class will only have 2 static methods for now. The &lt;code&gt;load()&lt;/code&gt; &amp;amp; &lt;code&gt;of()&lt;/code&gt; method.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;import &#39;package:flutter/material.dart&#39;;
import &#39;package:intl/intl.dart&#39;;

class AppLocalization {
  
  static Future&amp;lt;AppLocalization&amp;gt; load(Locale locale) {
    final String name = locale.countryCode.isEmpty ? locale.languageCode : locale.toString();
    final String localeName = Intl.canonicalizedLocale(name);
    return initializeMessages(localeName).then((_) {
      Intl.defaultLocale = localeName;
      return AppLocalization();
    });
  }

  static AppLocalization of(BuildContext context) {
    return Localizations.of&amp;lt;AppLocalization&amp;gt;(context, AppLocalization);
  }
  
  // list of locales
  String get heyWorld {
    return Intl.message(
      &#39;Hey World&#39;,
      name: &#39;heyWorld&#39;,
      desc: &#39;Simpel word for greeting &#39;,
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;PS: NOTE THAT YOUR &lt;code&gt;load()&lt;/code&gt; might be returning an error on the line: &lt;code&gt;return initializeMessages()&lt;/code&gt; ignore this for now, we’ll remove it in a while.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/error-at-initializeMessages.png&quot; alt=&quot;error at initializeMessages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;load()&lt;/code&gt; : It will load/set all the Localized values. You can also call this method if you wish to switch the locale of app manually.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;of()&lt;/code&gt; : This method will return the instance of current Localization of the app. Somewhat like a factory method.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;get heyWorld&lt;/code&gt;: This getter returns the value of the heyWorld. This property is what will be using to get its  translations based on locale of the app. For demo purpose i have only set 1 String as for now but you can as many as you can.&lt;/p&gt;

&lt;h2 id=&quot;create-a-applocalizationdelegate-in-the-applocalization-class&quot;&gt;Create a AppLocalizationDelegate in the AppLocalization class&lt;/h2&gt;

&lt;p&gt;Now create an &lt;code&gt;AppLocalizationDelegate&lt;/code&gt; for the &lt;code&gt;AppLocalization&lt;/code&gt; class.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;class AppLocalizationDelegate extends LocalizationsDelegate&amp;lt;AppLocalization&amp;gt;{
  final Locale overriddenLocale;

  const AppLocalizationDelegate(this.overriddenLocale);

  @override
  bool isSupported(Locale locale) =&amp;gt; [&#39;en&#39;, &#39;de&#39;].contains(locale.languageCode);

  @override
  Future&amp;lt;AppLocalization&amp;gt; load(Locale locale) =&amp;gt; AppLocalization.load(locale);

  @override
  bool shouldReload(LocalizationsDelegate&amp;lt;AppLocalization&amp;gt; old) =&amp;gt; false; 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see this Delegate class is extended from main  &lt;code&gt;LocalizationsDelegate&lt;/code&gt; and we have pointed it to &lt;code&gt;AppLocalization&lt;/code&gt; via &lt;code&gt;&amp;lt;AppLocalization&amp;gt;&lt;/code&gt;
add the above required methods and take a look at the &lt;code&gt;isSupported()&lt;/code&gt; method:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@override
bool isSupported(Locale locale)=&amp;gt;[&#39;en&#39;,&#39;de&#39;].contains(locale.languageCode);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This method will be called to check if the language is supported or not, based on the Locale instance provided. &lt;strong&gt;Make sure to you have your supported languages inserted in this list here such as: [‘en’, ‘de’ ….]&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;create-a-libl10n-directory-in-your-libfolder&quot;&gt;Create a lib/l10n Directory in your lib folder&lt;/h2&gt;
&lt;p&gt;Now create a l10n directory in your lib folder. This directory will hold all the translated values as per your Locale. Your final directory structure will look somewhat like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/l10n-folder.png&quot; alt=&quot;l10n-folder&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;create-resource-bundles-arbfiles&quot;&gt;Create resource bundles (.arb files)&lt;/h2&gt;
&lt;p&gt;In your Terminal and run the following command to create the arb files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ flutter pub run intl_translation:extract_to_arb --output-dir=lib/l10n lib/locale/app_localization.dart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will now see a new file in your l10n folder &lt;code&gt;intl_messages.arb&lt;/code&gt; . Cool!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/intl-messages-arb.png&quot; alt=&quot;intl-messagse-arb&quot; /&gt;&lt;/p&gt;

&lt;p&gt;NOTE: The Dart intl package only creates one template file of .arb  from your Localization class and names it &lt;code&gt;intl_messages.arb&lt;/code&gt;. From here you now have to manually create other resource  files with convention &lt;code&gt;intl_[LANGUAGE_CODE].arb&lt;/code&gt; and copy the content of &lt;code&gt;intl_messages.arb&lt;/code&gt; directly with updated the values.&lt;/p&gt;

&lt;p&gt;For eg: For English format you will create file &lt;code&gt;intl_en.arb&lt;/code&gt; and the content copied from &lt;code&gt;intl_messages.arb &lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;{
  &quot;@@last_modified&quot;: &quot;2019-06-27T22:25:57.081431&quot;,
  &quot;heyWorld&quot;: &quot;Hey World&quot;,
  &quot;@heyWorld&quot;: {
    &quot;description&quot;: &quot;Simple world for greeting &quot;,
    &quot;type&quot;: &quot;text&quot;,
    &quot;placeholders&quot;: {}
  },
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now lets create one in German language. So this will be:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;{
  &quot;@@last_modified&quot;: &quot;2019-06-27T23:38:38.868199&quot;,
  &quot;heyWorld&quot;: &quot;Hey Welt&quot;,
  &quot;@heyWorld&quot;: {
    &quot;description&quot;: &quot;Einfaches Wort zur Begrüßung&quot;,
    &quot;type&quot;: &quot;text&quot;,
    &quot;placeholders&quot;: {}
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/intl-de-arb.png&quot; alt=&quot;intl-de-arb&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you created these files in your l10n folder. Now you need to run another command to create the corresponding .dart files that will be used to manage these resource files. For that run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ flutter pub run intl_translation:generate_from_arb \
--output-dir=lib/l10n --no-use-deferred-loading \
lib/l10n/intl_messages.arb lib/l10n/intl_de.arb lib/l10n/intl_en.arb lib/locale/app_localization.dart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;NOTE that i have only 2 files &lt;code&gt;intl_en.arb&lt;/code&gt; &amp;amp; &lt;code&gt;intl_de.arb&lt;/code&gt; therefore i am only passing those in command. But if you have more or less you need to pass them all.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/intl-messages-dart.png&quot; alt=&quot;intl-messages-dart&quot; /&gt;
&lt;em&gt;Now check your l10n folder you will now see new dart files created from those resource files.
Btw you might see some warnings in the console, but its ok. just ignore them.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now import the &lt;code&gt;messages_all.dart&lt;/code&gt; file in your &lt;code&gt;AppLocalization&lt;/code&gt; Class and here’s a final look at your &lt;code&gt;AppLocalization&lt;/code&gt; Class:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;import &#39;dart:async&#39;;
import &#39;package:flutter/material.dart&#39;;
import &#39;package:intl/intl.dart&#39;;
import &#39;../l10n/messages_all.dart&#39;;

class AppLocalization {
  
  static Future&amp;lt;AppLocalization&amp;gt; load(Locale locale) {
    final String name = locale.countryCode.isEmpty ? locale.languageCode : locale.toString();
    final String localeName = Intl.canonicalizedLocale(name);
    return initializeMessages(localeName).then((_) {
      Intl.defaultLocale = localeName;
      return AppLocalization();
    });
  }

  static AppLocalization of(BuildContext context) {
    return Localizations.of&amp;lt;AppLocalization&amp;gt;(context, AppLocalization);
  }

  String get heyWorld {
    return Intl.message(
      &#39;Hey World&#39;,
      name: &#39;heyWorld&#39;,
      desc: &#39;Simpel word for greeting &#39;,
    );
  }
}

class AppLocalizationDelegate extends LocalizationsDelegate&amp;lt;AppLocalization&amp;gt; {
  final Locale overriddenLocale;

  const AppLocalizationDelegate(this.overriddenLocale);

  @override
  bool isSupported(Locale locale) =&amp;gt; [&#39;en&#39;, &#39;es&#39;, &#39;de&#39;].contains(locale.languageCode);

  @override
  Future&amp;lt;AppLocalization&amp;gt; load(Locale locale) =&amp;gt; AppLocalization.load(locale);
  
  @override
  bool shouldReload(LocalizationsDelegate&amp;lt;AppLocalization&amp;gt; old) =&amp;gt; false;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;The error is gone! right. ;)&lt;/em&gt;&lt;/strong&gt;
Now you’re just 1 step from using the language values based on your current Localization. To use language specific text in your app, you’ll simply need to follow the 2 steps :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;import AppLocalization class where you want to use the text&lt;/li&gt;
  &lt;li&gt;Call localized value of text via: &lt;code&gt;AppLocalizations.of(context).heyWorld&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now what is happening here is when you call the above method, it calls the getter of the &lt;code&gt;AppLocalization&lt;/code&gt; class and returns its value based on the Locale of the context. Which means.. &lt;/p&gt;

&lt;p&gt;If the context is en (ie english) it will return the value from &lt;code&gt;intl_en.arb&lt;/code&gt; and when the Locale changes to de ( ie german) it will return the value from &lt;code&gt;intl_de.arb&lt;/code&gt;. And since we’re using only Class getter for both languages ie &lt;code&gt;heyWorld&lt;/code&gt; therefore need not to worry about the that as well. Flutter will take care of that. Now here comes the best part.&lt;/p&gt;

&lt;h2 id=&quot;finally-update-maindart-file&quot;&gt;Finally update main.dart file&lt;/h2&gt;
&lt;p&gt;In your main.dart file and in your main Class set a new property &lt;code&gt;_localOverrideDelegate&lt;/code&gt; in the &lt;code&gt;_MyAppState&lt;/code&gt; and give it a default initial value:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AppLocalizationDelegate _localeOverrideDelegate = AppLocalizationDelegate(Locale(&#39;en&#39;, &#39;US&#39;));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;later we’ll be changing the state of Locale on custom event. Now add this parameter in the list of &lt;code&gt;_localizationDelegates&lt;/code&gt; in your main file.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;return new MaterialApp(
        ....,
        localizationsDelegates: [
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        _localeOverrideDelegate
    ],
    home: Scaffold(...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thats it! you’re all set to use you language files code. Now each place where you’ve used the convention: &lt;code&gt;AppLocalizations.of(context).[GETTER_KEY]&lt;/code&gt; the text will return the Localized value always. Now here’s the best part!&lt;/p&gt;

&lt;h2 id=&quot;switch-the-applocalization-on-customevents&quot;&gt;Switch the AppLocalization on custom events&lt;/h2&gt;
&lt;p&gt;To switch the Localization is real easy now. You only have to call the &lt;code&gt;load()&lt;/code&gt; method with the instance of &lt;code&gt;Locale([LANGUAGE_CODE], [SUBTAG])&lt;/code&gt; as argument. Like this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;For English US:
    AppLocalization.load(Locale(&#39;en&#39;, &#39;US&#39;));
For German DE:
    AppLocalization.load(Locale(&#39;de&#39;, &#39;DE&#39;));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty easy! right. And yes, you can call it on &lt;code&gt;onPressed()&lt;/code&gt; events on buttons or any other. &lt;/p&gt;

&lt;p&gt;Lets see a working example I’ll be switching the app Localization on click of a button. I’ll be adding a simple 2 buttons on the page and a &lt;code&gt;heyWorld&lt;/code&gt; text in the center. On click of button the &lt;code&gt;AppLocalization&lt;/code&gt; will switch over.
&lt;img src=&quot;/images/posts/flutter-Localization.gif&quot; alt=&quot;flutter-Localization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is snippet of my main.dart file&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-dart&quot;&gt;import &#39;package:flutter/material.dart&#39;;
import &#39;package:flutter_localizations/flutter_localizations.dart&#39;;
import &#39;locale/app_localization.dart&#39;;
import &#39;package:intl/intl.dart&#39;;

void main() =&amp;gt; runApp(MyApp());

class MyApp extends StatefulWidget {
  @override
  State&amp;lt;StatefulWidget&amp;gt; createState() =&amp;gt; _MyAppState();
}

class _MyAppState extends State&amp;lt;MyApp&amp;gt; {
  // This widget is the root of your application.
  AppLocalizationDelegate _localeOverrideDelegate =
      AppLocalizationDelegate(Locale(&#39;en&#39;, &#39;US&#39;));

  @override
  Widget build(BuildContext context) {
    return new MaterialApp(localizationsDelegates: [
      GlobalMaterialLocalizations.delegate,
      GlobalWidgetsLocalizations.delegate,
      _localeOverrideDelegate
    ], supportedLocales: [
      const Locale(&#39;en&#39;, &#39;US&#39;),
      const Locale(&#39;de&#39;, &#39;DE&#39;)
    ], 
    home: MyHomePage());
  }
}

class MyHomePage extends StatefulWidget {
  @override
  State&amp;lt;StatefulWidget&amp;gt; createState() =&amp;gt; _MyHomePageState();
}

class _MyHomePageState extends State&amp;lt;MyHomePage&amp;gt; {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
          // title: Text(AppLocalization.of(context).heyWorld),
          ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.start,
        children: &amp;lt;Widget&amp;gt;[
          Expanded(
            flex: 1,
            child: ListTile(
              leading: RaisedButton(
                onPressed: () {
                  setState(() {
                    AppLocalization.load(Locale(&#39;en&#39;, &#39;US&#39;));
                  });
                },
                child: Text(&#39;ENGLISH&#39;),
              ),
              trailing: RaisedButton(
                onPressed: () {
                  setState(() {
                    AppLocalization.load(Locale(&#39;de&#39;, &#39;DE&#39;));
                  });
                },
                child: Text(&#39;GERMAN&#39;),
              ),
            ),
          ),
          Expanded(
            flex: 1,
            child: Text(
              AppLocalization.of(context).heyWorld,
              style: TextStyle(fontSize: 20),
            ),
          )
        ],
      ),
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and here is the &lt;a href=&quot;https://github.com/abcdevops/flutter-tutorials/tree/master/internationalization&quot;&gt;link&lt;/a&gt; to full working example. Enjoy and Keep Fluttering!&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="flutter" /><category term="localization" /><category term="app-translation" /><category term="internationalization" /><category term="tutorial" /><category term="locales" /><category term="flutter_localizations" /><summary>At times you will have to make your Flutter app support different language or “locale” or in other words make your app Internationalized.</summary></entry><entry><title>WOW! sending data to the could is thaaat easy :)</title><link href="https://abcdevops.com/blog/2019/06/25/what-is-cloud.html" rel="alternate" type="text/html" title="WOW! sending data to the could is thaaat easy :)" /><published>2019-06-25T00:00:00-04:00</published><updated>2019-06-25T00:00:00-04:00</updated><id>https://abcdevops.com/blog/2019/06/25/what-is-cloud</id><content type="html" xml:base="https://abcdevops.com/blog/2019/06/25/what-is-cloud.html">&lt;p&gt;How it would be if sending data to the cloud is that easy? #AWS, #Azure, #Cloud, #Google, #GCP.
&lt;!--more--&gt;
&lt;img src=&quot;/images/posts/send-data-to-cloud-black.jpg&quot; alt=&quot;before devops vs after devops&quot; /&gt;&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="Azure" /><category term="AWS" /><category term="GCP" /><category term="DevToon" /><summary>How it would be if sending data to the cloud is that easy? #AWS, #Azure, #Cloud, #Google, #GCP.</summary></entry><entry><title>Applcation development before DevOps vs after DevOps.</title><link href="https://abcdevops.com/blog/2019/06/24/before-devops.html" rel="alternate" type="text/html" title="Applcation development before DevOps vs after DevOps." /><published>2019-06-24T00:00:00-04:00</published><updated>2019-06-24T00:00:00-04:00</updated><id>https://abcdevops.com/blog/2019/06/24/before-devops</id><content type="html" xml:base="https://abcdevops.com/blog/2019/06/24/before-devops.html">&lt;p&gt;&lt;strong&gt;Application development before DevOps vs after DevOps.&lt;/strong&gt;
&lt;!--more--&gt;
&lt;img src=&quot;/images/posts/before-devops.png&quot; alt=&quot;before devops vs after devops&quot; /&gt;&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="Azure" /><category term="AWS" /><category term="GCP" /><category term="DevToon" /><summary>Application development before DevOps vs after DevOps.</summary></entry><entry><title>What, Servers are on strike. We need some superman?</title><link href="https://abcdevops.com/blog/2019/06/05/servers-on-strike.html" rel="alternate" type="text/html" title="What, Servers are on strike. We need some superman?" /><published>2019-06-05T00:00:00-04:00</published><updated>2019-06-05T00:00:00-04:00</updated><id>https://abcdevops.com/blog/2019/06/05/servers-on-strike</id><content type="html" xml:base="https://abcdevops.com/blog/2019/06/05/servers-on-strike.html">&lt;p&gt;&lt;strong&gt;Allow #ABCDevOps to be the #UnionLeader and keep your servers in your service.&lt;/strong&gt;
&lt;!--more--&gt;
&lt;img src=&quot;/images/posts/servers-are-off.jpg&quot; alt=&quot;Where are you going? Our clients are still in queue.&quot; /&gt;&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="Azure" /><category term="AWS" /><category term="GCP" /><category term="DevToon" /><summary>Allow #ABCDevOps to be the #UnionLeader and keep your servers in your service.</summary></entry><entry><title>Amazon EC2 - Elastic Cloud Computing</title><link href="https://abcdevops.com/blog/2016/03/02/amazon-EC2.html" rel="alternate" type="text/html" title="Amazon EC2 - Elastic Cloud Computing" /><published>2016-03-02T00:00:00-05:00</published><updated>2016-03-02T00:00:00-05:00</updated><id>https://abcdevops.com/blog/2016/03/02/amazon-EC2</id><content type="html" xml:base="https://abcdevops.com/blog/2016/03/02/amazon-EC2.html">&lt;p&gt;Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides re-sizable compute capacity in the cloud. &lt;!--more--&gt;
Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale capacity, both up and down, as your computing requirements change.&lt;/p&gt;

&lt;p&gt;We are working from last 10 years in IT I remember time where if we needed a new Active Directory Server or a new SQL Server we have to go to HP or go to DELL order new servers we then had to get deliver to our data centers we had to get racked we had to do the networking setup them the internet accessible etc and you know your provisioning time should be anywhere from 5 to 10 business days. Then i started public cloud and was really exciting to see the capabilities of cloud in step having of 5 to 10 days lead time you would reduce to literally just couple of minutes you can have that server up and running so that’s really how cloud computing change the IT industry in the last 5 to 10 years so Amazon EC2 changes the economics of computing by allowing you to pay only for capacity that you actually use. Amazon EC2 provides developers the tools to build failure resilient applications and isolate themselves from common failure scenarios. So we just look at the first section the advantage of the cloud computing is utility based model you can pay only by the hour. If you want to spin up the development environment and just test on it and then terminate you only pay for 1 or 2 hours the environment is live the old model way you would buy the server hardware you would be stuck with it.&lt;/p&gt;

&lt;h2 id=&quot;elastic-compute-cloud-pricing-options&quot;&gt;Elastic Compute Cloud Pricing Options&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;free-tier-&quot;&gt;Free Tier –&lt;/h5&gt;
    &lt;p&gt;you get 735 hours free on certain micro instances.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;on-demand-&quot;&gt;On Demand –&lt;/h5&gt;
    &lt;p&gt;Which allow you to pay a fixed rate by the hour with no commitment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;reserved-&quot;&gt;Reserved –&lt;/h5&gt;
    &lt;p&gt;Which provide you with a capacity reservation, and offer a significant discount on the hourly charge for an instance. Then you have 1 Year or 3 Year Terms so reserved just saying i need 10 servers of this size and i am willing to pay either up-front contractual willing to commit for 1 to 3 years and if you do use reserved instances then you get massive discounts compared with on demand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;spot-&quot;&gt;Spot –&lt;/h5&gt;
    &lt;p&gt;This is enable you to bid whatever price you want to pay for instance capacity, providing for even greater savings if your applications have flexible start and end times.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;elastic-compute-cloud-on-demand-vs-reserved-vs-spot&quot;&gt;Elastic Compute Cloud On Demand vs Reserved vs Spot&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;on-demand-instances&quot;&gt;On Demand Instances&lt;/h5&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Users that want the low cost and flexibility of Amazon EC2 without any up-front payment or long-term commitment.&lt;/span&gt;
&lt;span&gt;Applications with short term, spike, or unpredictable workloads that cannot be interrupted.&lt;/span&gt;
&lt;span&gt;Applications being developed or tested on Amazon EC2 for the first time.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;reserved-instances&quot;&gt;Reserved Instances&lt;/h5&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Applications with steady state or predictable usage so reserved might be your 3 or 4 web servers that you always want to turned on and then your on demand instances might be is the part of an auto scaling event.&lt;/span&gt;
&lt;span&gt;Applications that require reserved capacity.&lt;/span&gt;
&lt;span&gt;Users able to make upfront payment to reduce their total computing costs even further.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;spot-instances&quot;&gt;Spot Instances&lt;/h5&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;  Applications that have flexible start and end times.&lt;/span&gt;
&lt;span&gt;Applications that are only feasible at very low compute prices.&lt;/span&gt;
&lt;span&gt;Users with urgent computing needs for large amounts  of additional capacity.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;elastic-compute-cloud-on-demand-instances&quot;&gt;Elastic Compute Cloud On Demand Instances&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;General Purpose Instances&lt;/li&gt;
  &lt;li&gt;Compute Optimized Instances
 &lt;span&gt;Compute Intensive Applications&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Memory Optimized Instances
  &lt;span&gt;Database &amp;amp; Memory Caching Applications&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;GPU Instances Instances
  &lt;span&gt;High Performance Parallel Computing (eg Hadoop)&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Storage Optimized Instances
  &lt;span&gt;Data warehousing and Parallel Computing&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;local-instance-storage-vs-elastic-block-storage&quot;&gt;Local Instance Storage vs Elastic Block Storage&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Local Instance Storage&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Data stored on a local instance store will persist only as long as that instance is alive. So you terminate that Instances you loose all the data on that virtual hardware.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Elastic Block Storage Backed Storage&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Data that is stored on an Amazon Elastic Block Storage volume will persist independently of the life of the instance.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;storage-backed-by-elastic-block-storage&quot;&gt;Storage backed by Elastic Block Storage&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Provisioned IOPS Solid State Drive&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Designed for I/O intensive applications such as large relational or No-SQL databases.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;General purpose Solid State Drive&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Designed for 99.999% availability.&lt;/span&gt;
&lt;span&gt;Ratio of 3 IOPS per GB, offer single digit millisecond latency, and also have the ability to burst up to 3000 IOPS for short periods.&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;magnetic&quot;&gt;Magnetic&lt;/h5&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Lowest cost per gigabyte of all Elastic Block Storage volume types. Magnetic volumes are ideal for workloads where data is accessed infrequently, and applications where the lowest storage cost is important.&lt;/span&gt;&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="ec2" /><category term="amazon" /><category term="aws" /><category term="service" /><category term="pricing" /><summary>Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides re-sizable compute capacity in the cloud.</summary></entry><entry><title>Amazon Lambda - Serverless technology</title><link href="https://abcdevops.com/blog/2016/02/29/amazon-lambda.html" rel="alternate" type="text/html" title="Amazon Lambda - Serverless technology" /><published>2016-02-29T00:00:00-05:00</published><updated>2016-02-29T00:00:00-05:00</updated><id>https://abcdevops.com/blog/2016/02/29/amazon-lambda</id><content type="html" xml:base="https://abcdevops.com/blog/2016/02/29/amazon-lambda.html">&lt;h2 id=&quot;what-is-lambda&quot;&gt;What is Lambda?&lt;/h2&gt;

&lt;p&gt;AWS Lambda is a compute service that runs your code in response to events and automatically manages the underlying compute resources. So you don’t have to worry about server infrastructure all you have to worry about is code and you can design your code respond automatically to events.
&lt;!--more--&gt;
AWS Lambda can automatically run code in response to modifications to objects in Amazon S3 buckets, messages arriving in Amazon Kinesis streams, or table updates in Amazon DynamoDb.&lt;/p&gt;

&lt;p&gt;Lambda runs your code on high-availability compute infrastructure and performs all the administration of the compute resources, including server and operating system maintenance, capacity provisioning and automatic scaling, code and security patch deployment, and code monitoring and logging.&lt;/p&gt;

&lt;p&gt;All you need to do is supply the code.&lt;/p&gt;

&lt;h2 id=&quot;what-events-trigger-lambda&quot;&gt;What Events Trigger Lambda?&lt;/h2&gt;

&lt;p&gt;You can use AWS Lambda to respond to table updates in Amazon DynamoDB, modifications to objects in Amazon S3 buckets, messages arriving in an Amazon Kinesis stream, AWS API calls logs created by AWS Cloud Trail, and custom events from mobile applications, web applications, or other web services.&lt;/p&gt;

&lt;h2 id=&quot;lambda-pricing&quot;&gt;Lambda Pricing&lt;/h2&gt;

&lt;p&gt;So pricing is broken down into two bits Requests based and Duration based. So if we start with requests you get first 1 million requests are free to the Lambda service and then you are paying $0.20 per 1 million requests thereafter.&lt;/p&gt;

&lt;p&gt;Duration is calculated from the time your code begins executing until it returns or otherwise terminates, and it’s rounded up to the nearest 100ms. The price depends on the amount of memory you allocate to your function. You are charged $0.00001667 for every GB-second used.&lt;/p&gt;

&lt;p&gt;In terms of your free tier&lt;/p&gt;

&lt;p&gt;1M free requests per month and 400,000 GB-seconds of compute time per month. The memory size you choose for your Lambda functions determines how long they can run in the free tier. The Lambda free tier does not automatically expire at the end of your 12 month AWS Free Tier term, but is available in both existing and new AWS customers indefinitely.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="serverless" /><category term="lambda" /><category term="amazon" /><category term="aws" /><category term="service" /><category term="pricing" /><summary>What is Lambda?

AWS Lambda is a compute service that runs your code in response to events and automatically manages the underlying compute resources. So you don’t have to worry about server infrastructure all you have to worry about is code and you can design your code respond automatically to events.</summary></entry><entry><title>Amazon S3 - Simple storage service</title><link href="https://abcdevops.com/blog/2016/02/27/amazon-S3.html" rel="alternate" type="text/html" title="Amazon S3 - Simple storage service" /><published>2016-02-27T00:00:00-05:00</published><updated>2016-02-27T00:00:00-05:00</updated><id>https://abcdevops.com/blog/2016/02/27/amazon-S3</id><content type="html" xml:base="https://abcdevops.com/blog/2016/02/27/amazon-S3.html">&lt;h2 id=&quot;simple-storage-service-s3&quot;&gt;Simple Storage Service (S3):&lt;/h2&gt;

&lt;p&gt;S3 provides developers and IT teams with secure, durable, highly-scalable object storage. Amazon S3 is easy to use, with a simple web services interfaces to store and retrieve any amount of data from anywhere on the web.
&lt;!--more--&gt;
S3 Essentials
—&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;S3 is Object based i.e. allows you to upload files and stored file on the platform.&lt;/li&gt;
  &lt;li&gt;Files can be from 1 Byte to 5Tb in size.&lt;/li&gt;
  &lt;li&gt;There is unlimited storage.&lt;/li&gt;
  &lt;li&gt;Files are stored in Buckets. (Buckets like directory any windows and linux file system).&lt;/li&gt;
  &lt;li&gt;Buckets have a unique namespace for each given region (eg if i want to create a bucket izapcloudguru in the eu-west-1 region that namespace with then be reserved so somebody else with using another amazon account could not go in and create a izapcloudguru bucket. https://s3-eu-west-1.amazonaws.com/bucketname/)&lt;/li&gt;
  &lt;li&gt;Amazon guarantees 99.99% availability for the S3 platform. S3 buckets essentially spread across availability zone. So if availability zone goes down you don’t have to worry your S3 bucket is stored in the other availability zone and amazon do this automatically on a region bases you don’t have to worry about configuring this.&lt;/li&gt;
  &lt;li&gt;Amazon also guarantees 99.999999999% durability for S3 information. Durability is simply if you think of storing of file on a disk set i.e Raid 1 and you lose one of the disk because in Raid 1 configuration which mirror all your information is stored across two disks so you can loss of 1 disk now the way amazon structure S3 is that if you stored 10000 files the guarantee those 10000 files stay there with the 99.999999999% durability.&lt;/li&gt;
  &lt;li&gt;S3 can have metadata (key value pairs) on each storage (eg file).&lt;/li&gt;
  &lt;li&gt;S3 allows you to do Lifecycle Management.&lt;/li&gt;
  &lt;li&gt;Versioning&lt;/li&gt;
  &lt;li&gt;Encryption (S3 also allows you to do encrypt your buckets. You can store your files encrypted at rest.)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-storage-types&quot;&gt;S3 Storage Types&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Standard S3 storage which gives you 99.99% availability, and the 99.999999999% durability&lt;/li&gt;
  &lt;li&gt;Reduced Redundancy storage – Still has 99.99% availability and your buckets replicated across different availability zones automatically but they use different disk sets the only give you 99.99% durability over a given year. So it’s little bit cheaper to use reduced redundancy storage but you only stored files on that not important if you lose them.&lt;/li&gt;
  &lt;li&gt;Only use Reduced Redundancy Storage for replaceable data. For example if you have 10,000 files, you could expect to lose 100 files over 1 year as opposed to 0.00001 file with standard S3 durability.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-versioning&quot;&gt;S3 Versioning&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Stores all versions of an object (including all writes and even if you delete an object)&lt;/li&gt;
  &lt;li&gt;Great backup tool.&lt;/li&gt;
  &lt;li&gt;Once enabled, Versioning cannot be disabled, only suspended that’s quite important to know.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-lifecycle-management&quot;&gt;S3 Lifecycle Management&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Lifecycle Management can be used in conjunction with versioning.&lt;/li&gt;
  &lt;li&gt;Lifecycle Management can be applied to current versions and previous versions.&lt;/li&gt;
  &lt;li&gt;Following actions are allowed in conjunction with or without versioning;&lt;/li&gt;
  &lt;li&gt;Archive Only&lt;/li&gt;
  &lt;li&gt;Permanently Delete Only&lt;/li&gt;
  &lt;li&gt;Archive and then permanently delete.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-encryption&quot;&gt;S3 Encryption&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;You can upload/download your data to S3 via SSL Encrypted Endpoints and S3 can automatically encrypt your data at rest. S3 gives you the choice of managing your keys through AWS key Management Service (AWS Key Management Service), having Amazon S3 manage them for you, or providing your own keys.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-security&quot;&gt;S3 Security&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;All buckets are private by default.&lt;/li&gt;
  &lt;li&gt;Allows Access Control Lists (an individual user, can only have access to 1 bucket and only have read only access).&lt;/li&gt;
  &lt;li&gt;Integrates with IAM (using roles for example allows EC2 users to have access S3 buckets by roles).&lt;/li&gt;
  &lt;li&gt;All endpoints are encrypted by SSL.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-functionality&quot;&gt;S3 Functionality&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Static Websites can be hosted on S3. No need for web servers, you can just upload a static .html to an S3 bucket and take advantage of AWS S3’s durability and High Availability.&lt;/li&gt;
  &lt;li&gt;S3 also Integrates with Cloud Front which is amazon content delivering network.&lt;/li&gt;
  &lt;li&gt;Multipart uploads, allows you to upload parts of a file concurrently.&lt;/li&gt;
  &lt;li&gt;Suggested for files a 100Mb over. It is required for any file over 5Gbs.&lt;/li&gt;
  &lt;li&gt;Allows us to resume a stopped file upload.&lt;/li&gt;
  &lt;li&gt;S3 is spread across multiple availability zones and i guarantee you have Eventual Consistency you just have to remember the sometimes you might upload a file to an S3 bucket and then you go to try and access that file programmatically because you  trying to do that so fast it might not replicated across other availability zones. So just important to remember that all AZ’s will eventually be consistent. Put/Write/Delete requests will eventually be consistent across AZ’s.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;s3-use-cases&quot;&gt;S3 Use Cases&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;File Shares for networks&lt;/li&gt;
  &lt;li&gt;Backup/Archiving&lt;/li&gt;
  &lt;li&gt;Origin for CloudFront CDN’s&lt;/li&gt;
  &lt;li&gt;Hosting Static Files&lt;/li&gt;
  &lt;li&gt;Hosting Static Websites&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="s3" /><category term="storage" /><category term="amazon" /><category term="aws" /><category term="service" /><category term="pricing" /><summary>Simple Storage Service (S3):

S3 provides developers and IT teams with secure, durable, highly-scalable object storage. Amazon S3 is easy to use, with a simple web services interfaces to store and retrieve any amount of data from anywhere on the web.</summary></entry><entry><title>Amazon Cloud Front - serve static assets from the closest place.</title><link href="https://abcdevops.com/blog/2016/02/24/amazon-cloud-front.html" rel="alternate" type="text/html" title="Amazon Cloud Front - serve static assets from the closest place." /><published>2016-02-24T00:00:00-05:00</published><updated>2016-02-24T00:00:00-05:00</updated><id>https://abcdevops.com/blog/2016/02/24/amazon-cloud-front</id><content type="html" xml:base="https://abcdevops.com/blog/2016/02/24/amazon-cloud-front.html">&lt;h2 id=&quot;cdn-&quot;&gt;CDN:-&lt;/h2&gt;

&lt;p&gt;A Content Delivery Network (CDN) is a system of distributed servers (network) that deliver web pages and other web content to a user based on the geographic locations of the user, the origin of the webpage and a content delivery server. &lt;!--more--&gt;
Now, let’s look at a practical example if i am in Australia let say i am in Perth for example and i want access the server in New York that server has image files on it in order get those image files the actual image files have to be served across the Atlantic then across the Indian ocean in order to reach Perth and every 200Kms equals to approximately 1 millisecond length of time latency so it’s take me a little bit of time for those files to physically arrived for New York to Perth a even operating a speed of light it’s gonna be a longer time than a files viewing those files directly from a server in Perth so our Content Distribution Network does its every time a user in Perth tries to access those files in New York CDN cache those files add a server in Perth for the length of time. Now a new user goes to access the same files they can just get it from Perth server they don’t have to go halfway around the world to pull down the same files. Those files will be cached depending on the settings but you set was called it time to live (TTL) and that’s measured in seconds you can set on your CDN you can set TTL on your files to say how long you are going to cache them. So that a really high overview what CDN is and CloudFront is Amazon CDN.&lt;/p&gt;

&lt;p&gt;Amazon CloudFront can be used to deliver your entire website, including dynamic, static, streaming, and interactive content using a global network of edge locations. Requests for your content are automatically routed to the nearest edge location, so the content is delivered with the best possible performance.&lt;/p&gt;

&lt;p&gt;Amazon CloudFront is optimized to work with other Amazon Web Services, like Amazon Simple Storage Service (Amazon S3), Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Load Balancing, and Amazon Route 53. Amazon CloudFront also works seamlessly with any non-AWS origin server, which stores the original, definitive versions of your files.&lt;/p&gt;

&lt;h2 id=&quot;cloudfront-terminology&quot;&gt;CloudFront Terminology&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;origin-&quot;&gt;Origin –&lt;/h5&gt;
    &lt;p&gt;This is the origin of all the files that the CDN will distributed. This can be either an S3 Bucket, an EC2 Instance, an Elastic Load Balancer or Route53.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;distribution-&quot;&gt;Distribution –&lt;/h5&gt;
    &lt;p&gt;This is the name given the CDN which consists of a collection of Edge Locations. You can have 1 distribution with multiple origins and good example of this would be where buy to trying to serve a dynamic website and may be your image files or stored flat static files that be stored in an s3 bucket. You also running a PHP application it does not refresh to often and you want to cache the output of those PHP files you can create a separate origin server which should be an EC2 instance for example and then any PHP files would come from your EC2 instance image file comes from your S3 buckets. You can also have multiple S3 buckets with different files types perhaps you have an S3 buckets for your pdf files we have a separate S3 buckets for application users will download. So you can have 1 distribution will multiple origins.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;cloudfront-distribution-types&quot;&gt;CloudFront Distribution Types&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;web-distribution-&quot;&gt;Web Distribution –&lt;/h5&gt;
    &lt;p&gt;Typically used for websites&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Speed up distribution of static and dynamic content, for example, .html, .css, .php, and graphics files.&lt;/span&gt;
  &lt;span&gt;Distribute media files using HTTP or HTTPS.&lt;/span&gt;
  &lt;span&gt;Add, update, or delete objects, and submit data from web forms.&lt;/span&gt;
  &lt;span&gt;Use live streaming to stream an event in real time.&lt;/span&gt;
  &lt;span&gt;You store your files in an origin — either an Amazon S3 bucket or a web server. After you create the distribution, you can add more origins to the distribution.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;rtmp-&quot;&gt;RTMP –&lt;/h5&gt;
    &lt;p&gt;RTMP distribution to speed up distribution of your streaming media files using Adobe Flash Media Servers RTMP protocol. An RTMP distribution allows an end user to begin playing a media file before the file has finished downloading from a CloudFront edge location. Note the following:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;To create an RTMP distribution, you must store the media files in an Amazon S3 bucket.&lt;/span&gt;
  &lt;span&gt;To use CloudFront live streaming, create a web distribution.&lt;/span&gt;&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="CloudFront" /><category term="CDN" /><category term="amazon" /><category term="aws" /><category term="service" /><category term="pricing" /><summary>CDN:-

A Content Delivery Network (CDN) is a system of distributed servers (network) that deliver web pages and other web content to a user based on the geographic locations of the user, the origin of the webpage and a content delivery server.</summary></entry><entry><title>Amazon Storage Gateway - Better storage solution.</title><link href="https://abcdevops.com/blog/2016/02/22/amazon-storage-gateway.html" rel="alternate" type="text/html" title="Amazon Storage Gateway - Better storage solution." /><published>2016-02-22T00:00:00-05:00</published><updated>2016-02-22T00:00:00-05:00</updated><id>https://abcdevops.com/blog/2016/02/22/amazon-storage-gateway</id><content type="html" xml:base="https://abcdevops.com/blog/2016/02/22/amazon-storage-gateway.html">&lt;h2 id=&quot;storage-gateway&quot;&gt;Storage Gateway&lt;/h2&gt;

&lt;p&gt;AWS Storage Gateway is a service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization’s on-premises IT environment and AWS’s storage infrastructure.&lt;!--more--&gt;
 The service enables you to securely store data to the AWS cloud for scalable and cost-effective storage.&lt;/p&gt;

&lt;p&gt;AWS Storage Gateway software appliance is available for download as a virtual machine (VM) image that you install on a host in your data center. Once you’ve installed your gateway and associated it with your AWS account through our activation process, you can use the AWS Management Console to create either gateway-cached or gateway-stored volumes that can be mounted as iSCSI devices by your on-premises applications.&lt;/p&gt;

&lt;h2 id=&quot;storage-gateway-in-two-different-models-gateway-cached-and-gateway-stored&quot;&gt;Storage Gateway in two different models Gateway-cached and Gateway-stored&lt;/h2&gt;

&lt;h2 id=&quot;gateway-cached--&quot;&gt;Gateway-cached :-&lt;/h2&gt;
&lt;p&gt;Gateway-cached volumes allow you to utilize Amazon S3 for your primary data, while retaining some portion of it locally in a cache for frequently accessed data. These volumes minimize the need to scale your on-premises storage infrastructure, while still providing your applications with low-latency access to their  frequently accessed data. You can create storage volumes up to 32 TBs in size and mount them as iSCSI devices from your on-premises application servers. Data written to these volumes is stored in Amazon S3, with only a cache of recently written and recently read data stored locally on your on-premises storage hardware.&lt;/p&gt;

&lt;h2 id=&quot;gateway-stored--&quot;&gt;Gateway-stored :-&lt;/h2&gt;

&lt;p&gt;Gateway-stored volumes store your primary data locally, while asynchronously backing up that data to AWS. These volumes provide your on-premises applications with low-latency access to their entire data sets, while providing durable, off-site backups. You can create storage volumes up to 1TB in size and mount them as iSCSI devices from your on-premises applications servers. Data written to your gateway-stored volumes is stored on your on-premises storage hardware, and asynchronously backed up to Amazon S3 in the form of Amazon EBS snapshots.&lt;/p&gt;

&lt;h2 id=&quot;storage-gateway-pricing&quot;&gt;Storage Gateway Pricing&lt;/h2&gt;

&lt;p&gt;With AWS Storage Gateway, you pay only for what you use. AWS Storage Gateway has four pricing components: gateway usage (per GB per month) so the number of gateway using per month, snapshot storage usage (per GB per month), volume storage usage (per GB per month), and data transfer out (per GB per month).&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="sqs" /><category term="amazon" /><category term="aws" /><category term="service" /><category term="pricing" /><summary>Storage Gateway

AWS Storage Gateway is a service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization’s on-premises IT environment and AWS’s storage infrastructure.</summary></entry><entry><title>Amazon RDS - Relational database service</title><link href="https://abcdevops.com/blog/2016/02/20/amazon-RDS.html" rel="alternate" type="text/html" title="Amazon RDS - Relational database service" /><published>2016-02-20T00:00:00-05:00</published><updated>2016-02-20T00:00:00-05:00</updated><id>https://abcdevops.com/blog/2016/02/20/amazon-RDS</id><content type="html" xml:base="https://abcdevops.com/blog/2016/02/20/amazon-RDS.html">&lt;h2 id=&quot;databases-introduction&quot;&gt;Databases Introduction&lt;/h2&gt;

&lt;p&gt;So we just with brief introduction on the different types of databases so we got Relational databases.&lt;!--more--&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;relational-databases-oltp--&quot;&gt;Relational Databases (OLTP) :-&lt;/h5&gt;
    &lt;p&gt;Online Transaction Processing these are the databases that used to using day in day.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;RDS :-  Amazon have a service code RDS which stands for Relational Database Services. In this consist of 5 different relational databases including (MYSQL, SQL Server, POSTgresql, Oracle, and Aurora)&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;non-relational-databases-nosql--&quot;&gt;Non-Relational Databases (NOSQL) :-&lt;/h5&gt;
    &lt;p&gt;These aggressively new to the industry having sort of come out around 2004 also and Amazon service for this is :&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;Dynamodb :-  Most famous Non-relational database would be something like Mongodb are you could look at cloud end Couchdb. Dynamodb is slightly different to these databases do not compare with Mongodb.&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;data-warehousing-databases-olap--&quot;&gt;Data Warehousing Databases (OLAP) :-&lt;/h5&gt;
    &lt;p&gt;Online Analytical Processing and these over the use to be relational structure both from a logical perspective and it infrastructure perspective has not changed and these really there are types of databases these known as Data Warehousing Databases. Amazon offers for this product code:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span&gt;RedShift&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;compare-the-fundamentals&quot;&gt;Compare The Fundamentals&lt;/h2&gt;

&lt;p&gt;So Let’s start with the Relational Databases or Amazon RDS so it’s for what most of us are used to. Been around since the 1970’s.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Database&lt;/li&gt;
  &lt;li&gt;Tables :- Inside your database you got number of tables.&lt;/li&gt;
  &lt;li&gt;Row :- Inside your tables you got Row otherwise knows as Record.&lt;/li&gt;
  &lt;li&gt;Fields :- That Row or Record consists number of fields which known as colum&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;RDS includes technologies such as :-&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SQL Server&lt;/li&gt;
  &lt;li&gt;Oracle&lt;/li&gt;
  &lt;li&gt;MySQL Server&lt;/li&gt;
  &lt;li&gt;Postgres&lt;/li&gt;
  &lt;li&gt;Aurora&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;nosql-database-structure--&quot;&gt;NoSql Database Structure :-&lt;/h2&gt;

&lt;p&gt;NoSql quite a little bit different to relational databases so there is different types of NoSql i am gonna talk about document oriented databases in this  That’s by Dynamodb is you can also get tabular you get key value pairs you get different types of NoSql databases with the ones we are going to look at document oriented.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Collection :- So Inside your database you have got a collection.&lt;/li&gt;
  &lt;li&gt;Document :- Inside your collection and you got a number of documents.&lt;/li&gt;
  &lt;li&gt;Key Value Pairs :- Those documents consist of key value pairs.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;data-warehousing--&quot;&gt;Data Warehousing :-&lt;/h2&gt;

&lt;p&gt;This is often used by number of different software products business intelligence. Tools like Cognos, Jaspersoft, SQL Server Reporting Services, Oracle Hyperion, SAP NetWeaver.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun.jangra@abcdevops.com</email></author><category term="RDS" /><category term="oracle" /><category term="mysql" /><category term="PostgreSQL" /><category term="amazon" /><category term="aws" /><category term="service" /><category term="pricing" /><summary>Databases Introduction

So we just with brief introduction on the different types of databases so we got Relational databases.</summary></entry></feed>
